#loading DATA
data = iris

#details of data set
summary(data)

#disaply of top 5 rows
head(data)

#we normalise data so that the decision is not based particularly on one attributes only
#normalize function
normalise = function(x)
{
  return ((x-min(x))/(max(x)-min(x)))
}

#normalising sepal_length
data$Sepal.Length = normalise(data$Sepal.Length)

#normalising sepal_width
data$Sepal.Width = normalise(data$Sepal.Width)

#normalising petal_length
data$Petal.Length = normalise(data$Petal.Length)

#normalising petal_width
data$Petal.Width = normalise(data$Petal.Width)

#to see the entire data
data

#to create sample index
ind = sample(1:nrow(data), size = 0.9*nrow(data), replace = FALSE)

#creating training data
train_data = data[ind,]

#creating testing data 
test_data = data[-ind,]

#storing the 5th column in a variable 
test_data_label = test_data[,5]

#removing species column from test_data
test_data = test_data[,-5]

#load package
library(ggplot2)
library(class)
library(caret)

#training data label
train_data_label = train_data[,5]
train_data = train_data[,-5]

#implementing knn algo
model = knn(train_data, test_data, train_data_label, k=11)

#evaluating the performance of the model
#increases efficiency
confusionMatrix(model, test_data_label)

#try running this before creating training and testing data. it automates the process
model1 = train(Species ~., data = train_data, method = 'knn')
test = predict(model1, test_data)
confusionMatrix(test, test_data_label)
